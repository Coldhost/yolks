name: compile tools


on:
    push:
      branches:
        - main
      paths:
        - shared/tools/**
    workflow_dispatch:
  
jobs:
    build:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          version: [full, minimal]  # Full vs Minimal
          type: [debug,release]  # Debug vs Release
      name: Build v${{ github.run_number }}-${{ matrix.version }}-${{ matrix.type }} Build
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Generate config.yaml for ${{ matrix.version }} ${{ matrix.type }}
          working-directory: shared/tools
          run: |
            VERSION=v${{ github.run_number }}-${{ matrix.version }}-${{ matrix.type }}
            if [ "${{ matrix.type }}" == "debug" ]; then
                DEBUG=true
            else
                DEBUG=false
            fi
            MODULES=$(ls modules/ | grep -v '^\.' | tr '\n' ',' | sed 's/,$//')
  
            echo "version: \"$VERSION\"" > config.yaml
            echo "debug: $DEBUG" >> config.yaml
            echo "modules:" >> config.yaml
  
            if [ -n "$MODULES" ]; then
              IFS=',' read -ra MODULE_LIST <<< "$MODULES"
              for MODULE in "${MODULE_LIST[@]}"; do
                echo "  - $MODULE" >> config.yaml
              done
            else
              echo "  - No modules" >> config.yaml
            fi
  
            cat config.yaml
  
        - name: Install dependencies
          working-directory: shared/tools
          run: |
            pip install -r requirements.txt
  
        - name: Build ${{ matrix.version }} ${{ matrix.debug }}
          working-directory: shared/tools
          run: |
            chmod +x build.sh
            ./build.sh --config config.yaml

        - name: Login to GHCR
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        - name: Upload Binary to GHCR
          run: |
            echo "Pushing tarball to GHCR..."
            docker build -t ghcr.io/coldhost/tools-binary:latest .
            docker push ghcr.io/coldhost/tools-binary:latest
